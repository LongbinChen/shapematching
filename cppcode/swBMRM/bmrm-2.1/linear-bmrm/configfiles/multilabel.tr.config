//*** solver used to solve the regularized risk ***//
string Solver.type BMRM


//***  BMRM parameters ***//
// verbosity level
int BMRM.verbosity 2
	   

// keep convergence log in files? {1:yes, 0:no}
int BMRM.convergenceLog 0


// maximum number of iteration	
int BMRM.maxNumOfIter 10


// tolerance for epsilon termination criterion (set negative value to disable this criterion)
double BMRM.epsilonTol 1e-4


// tolerance for gamma termination criterion (set negative value to disable this criterion)
double BMRM.gammaTol -1e3


// regularization constant
double BMRM.lambda 1e-3



//*** BMRM inner solver ***//
//string BMRM.innerSolverType L2N2_LineSearch
string BMRM.innerSolverType L2N2_DaiFletcherPGM
//string BMRM.innerSolverType L2N2_prLOQO
//string BMRM.innerSolverType L1N1_Clp

// [optional] store intermediate result at every positive multiple of this number of iteration
//   (default: 1000000)
//int BMRM.checkpointInterval 1


// prefix for all check points
//string BMRM.checkpointPrefix model.checkpoint

// [optional] keep all (ALL) check points or only the latest (LATEST)?
// must set BMRM.checkpointPrefix too
//string BMRM.checkpointMode ALL




// predicted labels on test set (default: "predictedLabels")
//string Prediction.predictedLabelsFile prediction

// evaluated function values on test set (default: "decisionFunctionValues")
//string Prediction.decisionFunctionValuesFile decision


// [optional] start program with the model (i.e. weight vector) in this file
//string Model.hotStartModel hotstartmodel

// learned model (default: "model")
string Model.modelFile model.multilabel



//*** inner solver ***//
// verbosity level
int InnerSolver.verbosity 0


// [optional] type of gradient vector: {DENSE, SPARSE}
// use SPARSE when the gradient vector is known to be very sparse and is of very high dimension
//string L2N2_BMRMDualInnerSolver.gradType DENSE
//string L2N2_BMRMDualInnerSolver.gradType SPARSE

// [optional] maximum gradient set size
int L2N2_BMRMDualInnerSolver.maxGradSetSize 1000

// [optional] number of iterations an inactive gradient is allowed to remain in the gradient set before removal (minimum:2, default:10)
int L2N2_BMRMDualInnerSolver.gradIdleAge 10


//*** loss function parameters ***//
// type of loss function
string Loss.lossFunctionType MULTI_LABEL_CLASSIFICATION


// verbosity level
int Loss.verbosity 1


//*** dataset parameters ***//
int Data.verbosity 1

// data set format: variable length (or sequence) labels and svmlight/libsvm feature vectors
string Data.format VARIABLE_LENGTH_VECTOR_LABEL_VECTOR_FEATURE

// add a bias feature to the original feature vector? (default: false)
bool Data.bias false


// feature and label file names (with paths)
//string Data.featureFile ../../../Data/multilabel/yeast/yeast.train.txt.X		
//string Data.labelFile ../../../Data/multilabel/yeast/yeast.train.txt.Y.shifted

//string Data.featureFile ../../../Data/multilabel/tmc2007/tmc2007.train.txt.X		
//string Data.labelFile ../../../Data/multilabel/tmc2007/tmc2007.train.txt.Y.shifted

string Data.featureFile ../../../Data/multilabel/rcv1_topics/rcv1_topics.train.txt.X		
string Data.labelFile ../../../Data/multilabel/rcv1_topics/rcv1_topics.train.txt.Y.shifted
