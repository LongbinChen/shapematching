//*** solver used to solve the regularized risk ***//
string Solver.type BMRM

//***  main program (BMRM) parameters ***//
// verbosity level
int BMRM.verbosity 0
	   

// keep convergence log in files? {1:yes, 0:no}
int BMRM.convergenceLog 0


// maximum number of iteration	
int BMRM.maxNumOfIter 6000


// tolerance for epsilon termination criterion (set negative value to disable this criterion)
// note that this epsilon is equivalent to svm_multiclass -e, i.e., no conversion needed
double BMRM.epsilonTol 1e-2

// regularization constant  (note that lambda = 1/C_{svm_multiclass})
double BMRM.lambda 1e-3



// [optional] other possible choices {L2N2_prLOQO, L1N1_CLP}
string BMRM.innerSolverType L2N2_DaiFletcherPGM


// [optional] store intermediate result at every positive multiple of this number of iteration
//   (default: 1000000)
//int BMRM.checkpointInterval 200


// prefix for all check points
//string BMRM.checkpointPrefix model.checkpoint


// [optional] keep all (ALL) check points or only the latest (LATEST)?
//string BMRM.checkpointMode ALL




//*** inner solver ***//
// verbosity level
int InnerSolver.verbosity 0


//*** DaiFletcher PGM solver parameters ***//

// [optional] number of iterations an inactive gradient is allowed to remain in
//   the gradient set before removal (minimum:2, default:10)
int L2N2_BMRMDualInnerSolver.gradIdleAge 10

// [optional] maximum gradient set size
int L2N2_BMRMDualInnerSolver.maxGradSetSize 2000


//*** loss function parameters ***//
// type of loss function
string Loss.lossFunctionType WTA_MULTICLASS

//string WTA_MULTICLASS.marginScalingFunctionType MARGIN_RESCALING
string WTA_MULTICLASS.marginScalingFunctionType SLACK_RESCALING

string WTA_MULTICLASS.labelLossType ZERO_ONE
//string WTA_MULTICLASS.labelLossType SQUARED_DIFFERENCE

// verbosity level
int Loss.verbosity 0


// [optional] start program with the model (i.e. weight vector) in this file
//string Model.hotstartModel model

// predicted labels on test set (default: "predictedLabels")
//string Prediction.predictedLabelsFile prediction

// evaluated function values on test set (default: "decisionFunctionValues")
//string Prediction.decisionFunctionValuesFile decision


// learned model (default: "model")
string Model.modelFile model.wtamulticlass
 


//*** dataset parameters ***//
int Data.verbosity 1


// add a bias feature to the original feature vector?
//   default: false 
bool Data.bias false


// data set format: svmlight/libsvm format
string Data.format VECTOR_LABEL_VECTOR_FEATURE

// feature and label file names (with paths)
string Data.featureFile ../../../Data/multiclass/dna/dna.train.txt.X
string Data.labelFile ../../../Data/multiclass/dna/dna.train.txt.Y

//string Data.featureFile ../../../Data/multiclass/satimage/satimage.train.txt.X
//string Data.labelFile ../../../Data/multiclass/satimage/satimage.train.txt.Y

//string Data.featureFile ../../../Data/multiclass/letter/letter.train.txt.X
//string Data.labelFile ../../../Data/multiclass/letter/letter.train.txt.Y

//string Data.featureFile ../../../Data/multiclass/mnist/mnist.train.txt.5.X
//string Data.labelFile ../../../Data/multiclass/mnist/mnist.train.txt.5.Y

