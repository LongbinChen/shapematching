//*** solver used to solve the regularized risk ***//
string Solver.type RampBMRM


//***  main program (RampBMRM) parameters ***//
// verbosity level
int RampBMRM.verbosity 0
	   

// keep convergence log in files? {1:yes, 0:no}
int RampBMRM.convergenceLog 0


// maximum number of iteration	
int RampBMRM.maxNumOfOuterIter 30

int RampBMRM.maxNumOfInnerIter 2000

// tolerance for epsilon termination criterion (set negative value to disable this criterion)
double RampBMRM.epsilonTol 1e-4

// regularization constant
double RampBMRM.lambda 1e-4

// tolerance for CCCP stopping criterion
double RampBMRM.tauTol 1e-4

// [optional] other possible choices {L2N2_prLOQO, L1N1_CLP}
string BMRM.innerSolverType L2N2_DaiFletcherPGM


// [optional] store intermediate result at every positive multiple of this number of iteration
//   (default: 1000000)
//int RampBMRM.checkpointInterval 200


// prefix for all check points
//string RampBMRM.checkpointPrefix model.checkpoint


// [optional] keep all (ALL) check points or only the latest (LATEST)?
//string RampBMRM.checkpointMode ALL


//*** inner solver ***//
// verbosity level
int InnerSolver.verbosity 0


//*** DaiFletcher PGM solver parameters ***//

// [optional] number of iterations an inactive gradient is allowed to remain in
//   the gradient set before removal (minimum:2, default:10)
int L2N2_BMRMDualInnerSolver.gradIdleAge 10

// [optional] maximum gradient set size
int L2N2_BMRMDualInnerSolver.maxGradSetSize 2000


//*** loss function parameters ***//
// type of loss function
string Loss.lossFunctionType ROC_SCORE

// verbosity level
int Loss.verbosity 0


// [optional] start program with the model (i.e. weight vector) in this file
//string Model.hotstartModel model

// predicted labels on test set (default: "predictedLabels")
//string Prediction.predictedLabelsFile prediction

// evaluated function values on test set (default: "decisionFunctionValues")
//string Prediction.decisionFunctionValuesFile decision


// learned model (default: "model")
string Model.modelFile model.ramp.rocscore
 


//*** dataset parameters ***//
int Data.verbosity 1


// add a bias feature to the original feature vector?
//   default: false 
bool Data.bias false


// data set format: svmlight/libsvm format
string Data.format VECTOR_LABEL_VECTOR_FEATURE

// to be implemented data format.
//string Data.fileType VECTOR_LABEL_VECTOR_FEATURE_BINARY


// feature and label file names (with paths)
string Data.featureFile ../../../Data/biclass/adult9/adult9.train.txt.X
string Data.labelFile ../../../Data/biclass/adult9/adult9.train.txt.Y

